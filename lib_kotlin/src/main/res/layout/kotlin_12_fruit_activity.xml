<?xml version="1.0" encoding="utf-8"?>
<androidx.coordinatorlayout.widget.CoordinatorLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fitsSystemWindows="true">

    <com.google.android.material.appbar.AppBarLayout
        android:id="@+id/appBarLayout"
        android:layout_width="match_parent"
        android:layout_height="250dp"
        android:fitsSystemWindows="true">
        <!--   app:contentScrim="@color/colorPrimary" 设置趋于折叠和折叠之后 的颜色-->
        <!--   app:layout_scrollFlags="scroll|exitUntilCollapsed"
        scroll 表示随着内容滚动一起滚动，
        exitUntilCollapsed 表示滚动完成之后会固定在界面上，不在移出屏幕-->

        <com.google.android.material.appbar.CollapsingToolbarLayout
            android:id="@+id/CollapsingToolbarLayout"
            android:layout_width="match_parent"
            android:layout_height="match_parent"
            android:fitsSystemWindows="true"
            android:theme="@style/ThemeOverlay.AppCompat.Dark.ActionBar"
            app:contentScrim="@color/colorAccent"
            app:layout_scrollFlags="scroll|exitUntilCollapsed">
            <!--定义标题栏内容  1. 图片 ， 2 Toolbar-->
            <!-- app:layout_collapseMode 指定 当前控件在 CollapsingToolbarLayout 折叠时折叠-->
            <!-- parallax 表示 在折叠的过程中产生一定的位移，这种视觉效果非常好-->
            <!-- pin 表示在折叠过程中位置始终保持不变-->
            <ImageView
                android:id="@+id/fruitImage"
                android:layout_width="match_parent"
                android:layout_height="match_parent"
                android:fitsSystemWindows="true"
                android:scaleType="centerCrop"
                app:layout_collapseMode="parallax" />

            <!--android:fitsSystemWindows="true" 表示 该控件将出现在 系统的状态栏里 ，
            注意：1.必须给父类也设置上
             2. activity 的主题 设置成透明-->
            <androidx.appcompat.widget.Toolbar
                android:id="@+id/toolbar"
                android:layout_width="match_parent"
                android:layout_height="?actionBarSize"
                app:layout_collapseMode="pin" />
        </com.google.android.material.appbar.CollapsingToolbarLayout>
    </com.google.android.material.appbar.AppBarLayout>


    <!--记得给 NestedScrollView 添加 layout_behavior -->
    <androidx.core.widget.NestedScrollView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        app:layout_behavior="@string/appbar_scrolling_view_behavior">

        <LinearLayout
            android:layout_width="match_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical">

            <!--学以致用 使用 MaterialCardView 绘制圆角-->
            <com.google.android.material.card.MaterialCardView
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:layout_marginLeft="15dp"
                android:layout_marginTop="35dp"
                android:layout_marginRight="15dp"
                android:layout_marginBottom="15dp"
                android:theme="@style/Theme.MaterialComponents.Light"
                app:cardCornerRadius="4dp">

                <TextView
                    android:id="@+id/FruitContextText"
                    android:layout_width="match_parent"
                    android:layout_height="wrap_content"
                    android:layout_margin="10dp" />

            </com.google.android.material.card.MaterialCardView>
        </LinearLayout>
    </androidx.core.widget.NestedScrollView>

    <!--学以致用2 添加悬浮btn 获取额外的动画效果-->
    <!-- FloatingActionButton , AppBarLayout 和 NestedScrollView 是平级关系 -->
    <!-- app:layout_anchor 指定 FloatingActionButton 的锚点，
            我们将 锚点设置到 AppBarLayout 这样悬浮btn 将显示在标题栏的区域内 -->
    <!-- app:layout_anchorGravity 属性将btn 显示在 右下角 -->
    <com.google.android.material.floatingactionbutton.FloatingActionButton
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_margin="16dp"
        android:src="@drawable/ic_comment"
        app:layout_anchor="@id/appBarLayout"
        app:layout_anchorGravity="bottom|end" />
</androidx.coordinatorlayout.widget.CoordinatorLayout>